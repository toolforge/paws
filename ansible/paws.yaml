---

- name: Deploy PAWS to k8s cluster
  gather_facts: false
  hosts: localhost
  tasks:
    - name: include env vars
      include_vars: vars/{{ datacenter }}.yaml

    - name: Temporary directory for cloud provider
      ansible.builtin.tempfile:
        state: directory
        suffix: paws
      register: paws_dir
      changed_when: False

    - name: Clone cloud-provider-openstack
      ansible.builtin.git:
        repo: https://github.com/kubernetes/cloud-provider-openstack.git
        dest: "{{ paws_dir.path }}"
        version: v1.26.3
      changed_when: False

    - name: Copy file with owner and permissions
      ansible.builtin.copy:
        src: files/csi-secret-cinderplugin.yaml.crypt
        dest: "{{ paws_dir.path }}/manifests/cinder-csi-plugin/csi-secret-cinderplugin.yaml"
      changed_when: False

    - name: install the things!
      kubernetes.core.k8s:
        state: present
        src: "{{ paws_dir.path }}/manifests/cinder-csi-plugin/{{ item }}"
      loop:
        - "csi-secret-cinderplugin.yaml"
        - "cinder-csi-controllerplugin-rbac.yaml"
        - "cinder-csi-controllerplugin.yaml"
        - "cinder-csi-nodeplugin-rbac.yaml"
        - "cinder-csi-nodeplugin.yaml"
        - "csi-cinder-driver.yaml"

    - name: Delete temporary directory
      ansible.builtin.file:
        state: absent
        path: "{{ paws_dir.path }}"
      changed_when: False

    - name: and sc.yaml
      kubernetes.core.k8s:
        state: present
        src: "files/sc.yaml"

    - name: Deploy ingress-nginx
      kubernetes.core.helm:
        name: ingress-nginx
        chart_ref: ingress-nginx
        chart_repo_url: https://kubernetes.github.io/ingress-nginx
        release_namespace: ingress-nginx
        create_namespace: true
        set_values:
          - value: controller.service.type=NodePort
            value_type: string
          - value: controller.service.enableHttps=false
            value_type: string
          - value: controller.service.nodePorts.http=30001
            value_type: string
          - value: controller.config.proxy-body-size=4m
            value_type: string

    - name: Add jupyterhub chart repo
      kubernetes.core.helm_repository:
        name: jupyterhub
        repo_url: "https://jupyterhub.github.io/helm-chart/"

    - name: Deploy paws
      kubernetes.core.helm:
        name: paws
        chart_ref: ../paws
        release_namespace: "{{ namespace }}"
        create_namespace: true
        values_files:
          - ../paws/{{ secret_file }}.yaml
          - ../paws/{{ env_file }}.yaml
        timeout: '50m'
        dependency_update: true

    - name: and psp.yaml
      kubernetes.core.k8s:
        state: present
        definition: "{{ lookup('template', 'files/psp.yaml.j2') }}"

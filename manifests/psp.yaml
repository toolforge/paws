---

apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  annotations:
    seccomp.security.alpha.kubernetes.io/allowedProfileNames: runtime/default
    seccomp.security.alpha.kubernetes.io/defaultProfileName: runtime/default
  name: paws-psp
spec:
  requiredDropCapabilities:
    - ALL
  allowPrivilegeEscalation: false
  fsGroup:
    rule: 'MustRunAs'
    ranges:
      # GID for tools.paws only
      - min: 52771
        max: 52771
  hostIPC: false
  hostNetwork: false
  hostPID: false
  privileged: false
  readOnlyRootFilesystem: false
  runAsUser:
    rule: 'MustRunAs'
    ranges:
      # UID for tools.paws only
      - min: 52771
        max: 52771
  seLinux:
    rule: 'RunAsAny'
  supplementalGroups:
    rule: 'MustRunAs'
    ranges:
      - min: 1
        max: 65535
  volumes:
    - 'configMap'
    - 'emptyDir'
    - 'projected'
    - 'secret'
    - 'downwardAPI'
    - 'hostPath'
    - 'nfs'
    - 'persistentVolumeClaim'
  allowedHostPaths:
    - pathPrefix: '/mnt/nfs'
      readOnly: true
    - pathPrefix: '/var/lib/sss/pipes'
      readOnly: false
---
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  annotations:
    seccomp.security.alpha.kubernetes.io/allowedProfileNames: runtime/default
    seccomp.security.alpha.kubernetes.io/defaultProfileName: runtime/default
  name: paws-psp-public
spec:
  requiredDropCapabilities:
    - ALL
  allowPrivilegeEscalation: false
  fsGroup:
    rule: 'MustRunAs'
    ranges:
      # GID for tools.paws only
      - min: 52903
        max: 52903
  hostIPC: false
  hostNetwork: false
  hostPID: false
  privileged: false
  readOnlyRootFilesystem: false
  runAsUser:
    rule: 'MustRunAs'
    ranges:
      # UID for tools.paws-public only
      - min: 52903
        max: 52903
  seLinux:
    rule: 'RunAsAny'
  supplementalGroups:
    rule: 'MustRunAs'
    ranges:
      - min: 1
        max: 65535
  volumes:
    - 'configMap'
    - 'emptyDir'
    - 'projected'
    - 'secret'
    - 'downwardAPI'
    - 'hostPath'
    - 'nfs'
    - 'persistentVolumeClaim'
  allowedHostPaths:
    - pathPrefix: '/public/dumps'
      readOnly: true
    - pathPrefix: '/mnt/nfs'
      readOnly: true
    - pathPrefix: '/var/lib/sss/pipes'
      readOnly: false
    - pathPrefix: '/data/project'
      readOnly: false

---

# Cluster role which grants access to the paws pod security policy
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: paws-psp
rules:
  - apiGroups:
      - policy
    resourceNames:
      - paws-psp
    resources:
      - podsecuritypolicies
    verbs:
      - use

---
# Cluster role which grants access to the paws pod security policy
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: paws-psp-public
rules:
  - apiGroups:
      - policy
    resourceNames:
      - paws-psp-public
    resources:
      - podsecuritypolicies
    verbs:
      - use
---

apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: paws-psp
  namespace: prod
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: paws-psp
subjects:
  # For all most accounts in the prod (paws) namespace
  - kind: ServiceAccount
    name: hub
    namespace: prod
  - kind: ServiceAccount
    name: default
    namespace: prod
  - kind: ServiceAccount
    name: hook-image-awaiter
    namespace: prod

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: paws-psp-public
  namespace: prod
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: paws-psp-public
subjects:
  # For the paws-public service account in the prod (paws) namespace
  - kind: ServiceAccount
    name: paws-public
    namespace: prod
---
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  annotations:
    seccomp.security.alpha.kubernetes.io/allowedProfileNames: runtime/default
    seccomp.security.alpha.kubernetes.io/defaultProfileName: runtime/default
  name: minesweeper-psp
spec:
  requiredDropCapabilities:
    - ALL
  allowPrivilegeEscalation: false
  fsGroup:
    rule: 'MustRunAs'
    ranges:
      # GID for tools.paws and root
      - min: 0
        max: 0
      - min: 52771
        max: 52771
  hostIPC: false
  hostNetwork: false
  hostPID: true  # Needed for minesweeper ps
  privileged: false
  readOnlyRootFilesystem: false
  runAsUser:
    rule: 'MustRunAs'
    ranges:
      # UID for tools.paws only
      - min: 52771
        max: 52771
  seLinux:
    rule: 'RunAsAny'
  supplementalGroups:
    rule: 'MustRunAs'
    ranges:
      - min: 0
        max: 65535
  volumes:
    - 'configMap'
    - 'emptyDir'
    - 'projected'
    - 'secret'
    - 'downwardAPI'
    - 'hostPath'
    - 'persistentVolumeClaim'
  allowedHostPaths:
    - pathPrefix: '/public/dumps'
      readOnly: true
    - pathPrefix: '/mnt/nfs'
      readOnly: true
    - pathPrefix: '/var/lib/sss/pipes'
      readOnly: false
    - pathPrefix: '/data/project'
      readOnly: false
---

# Cluster role which grants access to the minesweeper pod security policy
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: minesweeper-psp
rules:
  - apiGroups:
      - policy
    resourceNames:
      - minesweeper-psp
    resources:
      - podsecuritypolicies
    verbs:
      - use
---

apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: minesweeper-psp
  namespace: prod
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: minesweeper-psp
subjects:
  # For all most accounts in the prod (paws) namespace
  - kind: ServiceAccount
    name: minesweeper
    namespace: prod
